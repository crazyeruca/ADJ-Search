/* config.h.win32 */
/* On Unix systems, generated by configure, but must be manually created for */
/* Win32 / Visual C++ builds */

/* Define if ftime returns void */
#define FTIME_RETURNS_VOID 1

/* Define to 1 if you have the <dlfcn.h> header file. */
/* #undef HAVE_DLFCN_H */

/* Define to 1 if you have the <fcntl.h> header file. */
#define HAVE_FCNTL_H 1

/* Define to 1 if you have the `fork' function. */
/* #undef HAVE_FORK */

/* Define to 1 if you have the `fsync' function. */
/* #undef HAVE_FSYNC */

/* Define to 1 if you have the `ftime' function. */
#define HAVE_FTIME 1

/* Define to 1 if you have the `gethostname' function. */
/* #undef HAVE_GETHOSTNAME */

/* Define to 1 if you have the `gettimeofday' function. */
/* #undef HAVE_GETTIMEOFDAY */

/* Define to 1 if you have the `hstrerror' function. */
/* #undef HAVE_HSTRERROR */

/* Define to 1 if you have the <inttypes.h> header file. */
/* #undef HAVE_INTTYPES_H */

/* Define to 1 if you have the <limits.h> header file. */
#define HAVE_LIMITS_H 1

/* Define to 1 if you have the `link' function. */
/* #undef HAVE_LINK */

/* Define to 1 if you have the <memory.h> header file. */
#define HAVE_MEMORY_H 1

/* Define to 1 if you have the 'socketpair' function. */
/* #undef HAVE_SOCKETPAIR */

/* Define to 1 if you have the <sstream> header file. */
#define HAVE_SSTREAM 1

/* Define to 1 if you have the <stdint.h> header file. */
/* #undef HAVE_STDINT_H */

/* Define to 1 if you have the <stdlib.h> header file. */
#define HAVE_STDLIB_H 1

/* Define to 1 if you have the <streambuf> header file. */
#define HAVE_STREAMBUF 1

/* Define to 1 if you have the `strerror' function. */
#define HAVE_STRERROR 1

/* Define to 1 if you have the <strings.h> header file. */
/* #undef HAVE_STRINGS_H */

/* Define to 1 if you have the <string.h> header file. */
#define HAVE_STRING_H 1

/* Define to 1 if you have the <sys/errno.h> header file. */
/* #undef HAVE_SYS_ERRNO_H */

/* Define to 1 if you have the <sys/select.h> header file. */
/* #undef HAVE_SYS_SELECT_H */

/* Define to 1 if you have the <sys/stat.h> header file. */
#define HAVE_SYS_STAT_H 1

/* Define to 1 if you have the <sys/types.h> header file. */
#define HAVE_SYS_TYPES_H 1

/* Define to 1 if you have the <sys/utsname.h> header file. */
/* #undef HAVE_SYS_UTSNAME_H */

/* Define to 1 if you have the <unistd.h> header file. */
/* #undef HAVE_UNISTD_H */

/* Define if valgrind is installed and supports VALGRIND_COUNT_LEAKS */
/* #undef HAVE_VALGRIND */

/* Define to 1 if you have the <zlib.h> header file. */
#define HAVE_ZLIB_H 1

/* Name of package */
#define PACKAGE "xapian-core"

/* Define to the address where bug reports for this package should be sent. */
#define PACKAGE_BUGREPORT ""

/* Define to the full name of this package. */
#define PACKAGE_NAME "xapian-core"

/* Define to the full name and version of this package. */
#define PACKAGE_STRING "xapian-core 1.2.20"

/* Define to the one symbol short name of this package. */
#define PACKAGE_TARNAME "xapian-core"

/* Define to the version of this package. */
#define PACKAGE_VERSION "1.2.20"

/* explicit prototype needed for pread (if any) */
/* #undef PREAD_PROTOTYPE */

/* explicit prototype needed for pwrite (if any) */
/* #undef PWRITE_PROTOTYPE */

/* Define to the name of a function implementing snprintf but not caring about
   ISO C90 return value semantics (if one exists) */
/* #undef SNPRINTF */

/* Define to the name of a function implementing snprintf with ISO C90
   semantics (if one exists) */
/* #undef SNPRINTF_ISO */

/* type to use for 5th parameter to getsockopt */
#define SOCKLEN_T int

/* Define to 1 if you have the ANSI C header files. */
#define STDC_HEADERS 1

/* Version number of package */
#define VERSION "1.2.20"

/* Define if you want debugging to be enabled (will cause some slow down) */
/* #undef XAPIAN_DEBUG */

/* Define if you want paranoid debugging to be enabled (will cause significant
   slow-down) */
/* #undef XAPIAN_DEBUG_PARANOID */

/* Define if you want code profiling messages */
/* #undef XAPIAN_DEBUG_PROFILE */

/* Define if you want lots of debugging messages */
/* #undef XAPIAN_DEBUG_VERBOSE */

/* Define to disable use of visibility attributes */
/* #undef XAPIAN_DISABLE_VISIBILITY */

/* Number of bits in a file offset, on hosts where this is settable. */
/* #undef _FILE_OFFSET_BITS */

/* Define for large files, on AIX-style hosts. */
/* #undef _LARGE_FILES */

/* Define to `int' if <sys/types.h> does not define. */
#define mode_t int

/* Define to `int' if <sys/types.h> does not define. */
#define pid_t int

/* Define to `int' if <sys/types.h> does not define. */
#ifdef _WIN64
# define ssize_t __int64
#else
# define ssize_t long
#endif

/* Disable stupid MSVC "performance" warning for converting int to bool. */
#ifdef _MSC_VER
# pragma warning(disable:4800)
#endif

/* Disable MSVC warning about obsolete functions */
#ifdef _MSC_VER
# pragma warning(disable:4996)
#endif

/* Disable MSVC warning about macros with missing parameters */
#ifdef _MSC_VER
# pragma warning(disable:4003)
#endif

/* Define rare() as identity, since we don't have this in MSVC (See
 * the section "Branch Prediction Hints" in xapian-core/HACKING) */
#define rare(COND) (COND)

/* Define usual() as identity, since we don't have this in MSVC (See
 * the section "Branch Prediction Hints" in xapian-core/HACKING) */
#define usual(COND) (COND)

/* Define sizes of types as this isn't done by Windows */

/* The number of bytes in a int.  */
#define SIZEOF_INT 4

/* The number of bytes in a long.  */
#define SIZEOF_LONG 4

#define __WIN32__

#define HAVE_SCWS

#define SCWS_ETCDIR ".//dict"